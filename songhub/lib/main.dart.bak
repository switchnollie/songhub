// Copyright 2018 The Flutter team. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

import 'package:flutter/material.dart';
import 'package:english_words/english_words.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {

  // Mainscreen widget

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: "Startup Name Generator",
      theme: ThemeData(
        primaryColor: Colors.white,
      ),  
      home: RandomWords(),
    );
  }
}

class RandomWordsState extends State<RandomWords> {

    // State class inherits logic
    // State can change during lifetime of widget

    final _suggestions = <WordPair>[];
    final Set<WordPair> _saved = Set<WordPair>();
    final _biggerFont = const TextStyle(fontSize: 18.0);

    @override
    Widget build(BuildContext context) {
      return Scaffold(
        appBar: AppBar(
          title: Text("Startup Name Generator"),
          actions: <Widget>[
            IconButton(icon: Icon(Icons.list), onPressed: _pushSaved)
          ],
        ),
        body: _buildSuggestions(),
      );
    }

    Widget _buildSuggestions() {

      // Widget to build compute suggestions list
      // TODO: Try displaying only 10 items and fit functionality to Songhub list items

      return ListView.builder(
        padding: const EdgeInsets.all(16.0),
        itemBuilder: (context, i) {
          if (i.isOdd) return Divider();
          final index = i ~/ 2;
          if (index >= _suggestions.length) {
            _suggestions.addAll(generateWordPairs().take(10));
          }
          // Call function to display random word Text widgets
          return _buildRow(_suggestions[index]);
        });
    }

    Widget _buildRow(WordPair pair) {

      // Widget defining list row

      final bool alreadySaved = _saved.contains(pair);

      return ListTile(
        title: Text(
          pair.asPascalCase,
          style: _biggerFont,
        ),
        trailing: Icon(
          alreadySaved ? Icons.favorite : Icons.favorite_border,
          color: alreadySaved ? Colors.red : null,
        ),
        onTap: () {
          //TODO: In our project this onTap should route to song details screen
          setState(() {
          if (alreadySaved) {
            _saved.remove(pair);
          } else {
            _saved.add(pair);
          }
          });
        });
    }

    void _pushSaved() {
      Navigator.of(context).push(
        MaterialPageRoute<void>(
          builder: (BuildContext context) {
            final Iterable<ListTile> tiles = _saved.map(
              (WordPair pair) {
                return ListTile(
                  title: Text(
                    pair.asPascalCase,
                    style: _biggerFont,
                  ),
                );
              },
              );
              
              final List<Widget> divided = ListTile
              .divideTiles(
                context: context,
                tiles: tiles,
              )
              .toList();

              return Scaffold(
                appBar: AppBar(
                  title: Text("Saved Suggestions"),
                ),
                 body: ListView(children: divided),
                );
          },
          ),
      );
    }
}

class RandomWords extends StatefulWidget {

  // Widget instance inherits logic from State class

  @override
  RandomWordsState createState() => RandomWordsState();
}

